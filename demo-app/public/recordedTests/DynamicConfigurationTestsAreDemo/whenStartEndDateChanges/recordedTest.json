{"slides":[{"screenshot":"DynamicConfigurationStory_changeDisplayIntervalButton","sourceFile":"DynamicConfigurationTestsAreDemo.tsx","sourceLine":16},{"screenshot":"Timebar_timebarInnerBottom_Timebar_timebarItem_0","sourceFile":"DynamicConfigurationTestsAreDemo.tsx","sourceLine":20},{"screenshot":"Timebar_timebarInnerBottom_Timebar_timebarItem_23","sourceFile":"DynamicConfigurationTestsAreDemo.tsx","sourceLine":21}],"sourceFiles":{"DynamicConfigurationTestsAreDemo.tsx":"import { Only, Scenario, ScenarioOptions, render, tad } from \"@famiprog-foundation/tests-are-demo\";\nimport { Main, testIds } from \"../stories/dynamicConfiguration/DynamicConfiguration.stories\";\nimport { timebarTestIds } from \"../../../src/components/timebar\";\n\n/**\n * @author Daniela Buzatu\n */\nexport class DynamicConfigurationTestsAreDemo {\n    async before() {\n        render(<Main/>);\n    }\n\n    @Scenario(\"WHEN I change the startDate/endDate properties THEN the new interval is displayed\")\n    async whenStartEndDateChanges() {\n        // WHEN I change the start/end date properties by clicking the \"Change display interval\" button\n        await tad.userEventWaitable.click(tad.screenCapturing.getByTestId(testIds.changeDisplayIntervalButton));\n        \n        // THEN the new interval is displayed\n        const timebarBottom = tad.screenCapturing.getByTestId(timebarTestIds.timebarInnerBottom);\n        await tad.assertWaitable.oneOf(tad.withinCapturing(timebarBottom).getByTestId(timebarTestIds.timebarItem + \"_\" + 0).textContent, [\"01\", \"01:00\"]);\n        await tad.assertWaitable.oneOf(tad.withinCapturing(timebarBottom).getByTestId(timebarTestIds.timebarItem + \"_\" + 23).textContent, [\"00\", \"00:00\"]);\n    }\n}"},"duration":442}